version: '3'

x-scanner:
  &scanner
  build:
    context: .
    dockerfile: Dockerfile
  networks:
    - ps_net
    - bs_net
    - tp_net
    - ua_net
    - redis_db
    - bs_mongo_db
  restart: always
  logging:
    driver: "json-file"
    options:
      max-size: "5M"
      max-file: "2"

x-db:
  &db
  REDIS_URL: redis://redis:6379
  REDIS_DB: 6
  MONGO_URL: mongodb://piperFinance:Piper2022@bs_mongo:27017

services:
  bs:
    <<: *scanner
    hostname: BS
    container_name: bs
    ports:
      - 7001:7001
      - 6001:6001
    environment:
      ASYNQ_MON_URL: ":7001"
      API_URL: ":6001"
      MONGO_DBNAME: BS
      LOG_LEVEL: warn
      MAX_CONCURRENT_WORKER: 600
      MONGO_MAX_POOL_SIZE: 600
      BLOCK_HEAD_DELAY: 15
      LIMIT_USERS: "false"
      SCAN_TASK_TIMEOUT: 20s
      TEST_RPC_CONNECTION_TIMEOUT: 12s
      RPC_ERROR_SILENCE: "false"
      PARSE_ERROR_SILENCE: "true"
      SUPPORTED_CHAINS: 1,250,56,137,43114,42161,9001,100,1284,10,1313161554
      BS_URL: http://BS:6001
      PS_URL: http://PS:6002
      UA_URL: http://UA:6003
      TP_URL: http://TP:6004
      <<: *db
    volumes:
      - ./logs/:/var/bs/log/
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 650M

  ## Maybe this bit will be seperated
  mongo-express:
    image: mongo-express:latest
    restart: always
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=adminadminadminadmin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=piperFinance
      - ME_CONFIG_MONGODB_ADMINPASSWORD=Piper2022
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT="27017"
    ports:
      - "5001:8081"
    networks:
      - bs_mongo_db

  mongo:
    image: mongo:latest
    hostname: bs_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: piperFinance
      MONGO_INITDB_ROOT_PASSWORD: Piper2022
      MONGO_INITDB_DATABASE: piper
    command: --wiredTigerCacheSizeGB 2
    volumes:
      - ./data/mongodb:/data/db
    ports:
      - 127.0.0.1:27017:27017
    restart: always
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bs_mongo_db
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2048M

networks:
  bs_mongo_db:
    name: bs_mongo_db
  bs_net:
    driver: bridge
    name: bs_net
  redis_db:
    external: true
    name: redis_db
  tp_net:
    external: true
    name: tp_net
  ua_net:
    external: true
    name: ua_net
  ps_net:
    external: true
    name: ps_net
